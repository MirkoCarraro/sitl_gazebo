<?xml version="1.0"?>
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass0" value="0.001" /> <!-- mass link 0 -->
  <xacro:property name="mass1" value="0.01" /> <!-- mass link 1 -->
  <xacro:property name="mass2" value="0.163" /> <!-- mass link 2 -->
  <xacro:property name="mass3" value="0.093" /> <!-- mass link 3 -->
  <xacro:property name="mass4" value="0.102" /> <!-- mass link 4 -->
<!--   <xacro:property name="masss" value="0.02" /> mass pinza lato sinistro - ferma -->
  <xacro:property name="massd" value="0.0135" /> <!-- mass pinza lato destro - mobile , valori foto*2.7-->
  <xacro:property name="width" value="0.026" /> <!-- 026 Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height0" value="0.5" /> <!-- 0.005  Link 0 -->
  <xacro:property name="height1" value="0.05" /> <!-- Link 1 -->
  <xacro:property name="height2" value="0.19585" /> <!-- Link 2 -->
  <xacro:property name="height3" value="0.063" /> <!-- Link 3, la parte 1 -->
  <xacro:property name="height32" value="0.021" /> <!-- Link 3, la parte 2 -->
  <xacro:property name="height4" value="0.067" /> <!-- Link 4 -->
  <xacro:property name="heights" value="0.048" /> <!-- Link pinza lato sinistro -->
  <xacro:property name="heightd" value="0.048" /> <!-- Link pinza lato destro -->
  <xacro:property name="heights2" value="0.048" /> <!-- Link pinza lato sinistro parte curva -->
  <xacro:property name="heightd2" value="0.048" /> <!-- 0.066 - Link pinza lato destro parte curva -->
  <xacro:property name="spessorepinza" value="0.004" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="axel_offset" value="0.005" /> <!-- Space btw top of beam and the each joint -->

  <!-- Main multirotor link -->
  <xacro:macro name="multirotor_base_macro"
    params="robot_namespace mass body_width body_height mesh_file mesh_scale color *inertia">
    <link name="base_link"></link>

  <!-- connetti il braccio
  <xacro:include filename="$(find rrbot_description)/urdf/rrbot.xacro" />
 -->

  <link name="link0">
    <collision>
      <origin xyz="0 0 ${height0/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height0}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height0/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height0}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height0/2}" rpy="0 0 0"/>
      <mass value="${mass0}"/>
      <inertia
	  ixx="${mass0 / 12.0 * (width*width + height0*height0)}" ixy="0.0" ixz="0.0"
	  iyy="${mass0 / 12.0 * (height0*height0 + width*width)}" iyz="0.0"
	  izz="${mass0 / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint0" type="fixed">
    <parent link="base_link"/>
    <child link="link0"/>
    <origin xyz="0 0 0" rpy="${PI} 0 0"/>
    <dynamics damping="0"/>
  </joint>


    <joint name="base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_link_inertia" />
    </joint>

    <link name="base_link_inertia">
      <inertial>
        <mass value="${mass}" />  <!-- [kg] -->
        <origin xyz="0 0 0" />
        <xacro:insert_block name="inertia" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://rotors_description/meshes/${mesh_file}"
            scale="${mesh_scale}" />
          <!-- <box size="${body_width} ${body_width} ${body_height}"/> --> <!-- [m] [m] [m] -->
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${body_width} ${body_width} ${body_height}" /> <!-- [m] [m] [m] -->
        </geometry>
      </collision>
    </link>

    <!-- attach multirotor_base_plugin to the base_link -->
    <gazebo>
      <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="rosbag">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <linkName>base_link</linkName>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>

    <gazebo reference="base_link">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

  <!-- Rotor joint and link -->
  <xacro:macro name="vertical_rotor"
    params="robot_namespace suffix direction motor_constant moment_constant parent mass_rotor radius_rotor time_constant_up time_constant_down max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color mesh mesh_scale *origin *inertia">
    <joint name="rotor_${motor_number}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <!-- TODO(ff): not currently set because it's not yet supported -->
      <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
      <parent link="${parent}" />
      <child link="rotor_${motor_number}" />

    </joint>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
    <link name="rotor_${motor_number}">
      <inertial>
        <mass value="${mass_rotor}" /> <!-- [kg] -->
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <!-- <cylinder length="0.005" radius="${radius_rotor}"/> --> <!-- [m] -->
          <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
          <mesh filename="package://rotors_description/meshes/${mesh}_${direction}.dae"
            scale="${mesh_scale}" />
          <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
        </geometry>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.005" radius="${radius_rotor}" /> <!-- [m] -->
        </geometry>
      </collision>
    </link>
    <gazebo>
      <plugin name="${suffix}_motor_model" filename="librotors_gazebo_motor_model.so">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <jointName>rotor_${motor_number}_joint</jointName>
        <linkName>rotor_${motor_number}</linkName>
        <turningDirection>${direction}</turningDirection>
        <timeConstantUp>${time_constant_up}</timeConstantUp>
        <timeConstantDown>${time_constant_down}</timeConstantDown>
        <maxRotVelocity>${max_rot_velocity}</maxRotVelocity>
        <motorConstant>${motor_constant}</motorConstant>
        <momentConstant>${moment_constant}</momentConstant>
        <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
        <motorNumber>${motor_number}</motorNumber>
        <rotorDragCoefficient>${rotor_drag_coefficient}</rotorDragCoefficient>
        <rollingMomentCoefficient>${rolling_moment_coefficient}</rollingMomentCoefficient>
        <motorSpeedPubTopic>motor_speed/${motor_number}</motorSpeedPubTopic>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
    <gazebo reference="rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>
</robot>
